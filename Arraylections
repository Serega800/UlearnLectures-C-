
МАССИВЫ

Массивы и foreach:
public static void Main()
{
    //Объявляем переменную array, точно так же, как раньше объявляли переменные других типов.
    //Тип массива чисел - это int[]. Аналогично, есть типы string[], double[], и т.д.
    int[] array;
    int number;

    //Инициализируем переменную array значением "new int[3]" - новый массив длины 3. 
    array = new int[3];
    number = 10;

    //Обращение к элементам массива
    array[0] = 1;
    array[1] = 2;
    array[2] = 3;

    //Массив, как и остальные типы, имеет собственные свойства и методы
    Console.WriteLine(array.Length); //Выведет 3

    //Обратите внимание, что array.ToString() работает не так, как хотелось бы.
    Console.WriteLine(array.ToString()); //Выведет System.Int32[]

    //Этот код вызовет exception - выход за границы массива
    Console.WriteLine(array[100]);

    var array2 = new[] { 1, 2, 3 };

    //Элементы массива можно пробежать так
    for (int i = 0; i < array2.Length; i++)
        Console.WriteLine(array2[i]);

    // Но лучше использовать специально предназначенный для этого оператор foreach 
    // Работает он аналогично циклу for выше.
    // Однако исключает любые ошибки в индексах и выглядит понятнее.
    foreach (var e in array2)
        Console.WriteLine(e);

    // Иногда, когда нужны именно индексы, foreach не подходит.
    // Например, в случае присвоения элементов массива 
    for (int i = 0; i < array2.Length; i++)
        array2[i] = 2 * i;
}

Какой вид циклов использовать?
Нужно сделать что-то с каждым элементом массива — используйте foreach.
Заранее известно, сколько раз нужно повторить действие — используйте for.
Есть переменная, изменяемая каждую итерацию, и у нее есть понятный смысл — используйте for.
Иначе — используйте while.

Короткая форма записи:
public static void Main()
{
	//Как и с другими типами, можно использовать var и совместить объявление и инициализацию
	var array1 = new int[3];
	array1[0] = 1;
	array1[1] = 2;
	array1[2] = 3;

	//Можно записать так. Это тоже самое, что предыдущие 4 строки. 
	var array2 = new int[] { 1, 2, 3 };

	//Или даже так. Компилятор автоматически восстановит тип данных из типов констант 1, 2, 3.
	var array3 = new[] { 1, 2, 3 };

	//Это касается, конечно, всех типов, не только числовых.
	var array4 = new[] { "a", "b", "c" };

	//Здесь компилятор выдаст ошибку, поскольку он не может определить тип массива.
	//var array5 = new[] { 1, "2", 3 };

	//Но это можно исправить, если указать тип явно. object - это прародитель всех типов. 
	//Все есть object.
	var array6 = new object[] { 1, "2", 3 };
}
